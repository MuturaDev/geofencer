// Generated by view binder compiler. Do not edit!
package com.sprotte.geolocator.demo.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.SeekBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.sprotte.geolocator.demo.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentMapBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final RelativeLayout container;

  @NonNull
  public final LinearLayout containerSettings;

  @NonNull
  public final FloatingActionButton currentLocation;

  @NonNull
  public final TextView instructionSubtitle;

  @NonNull
  public final TextView instructionTitle;

  @NonNull
  public final ConstraintLayout main;

  @NonNull
  public final ImageView marker;

  @NonNull
  public final EditText message;

  @NonNull
  public final FloatingActionButton newReminder;

  @NonNull
  public final Button next;

  @NonNull
  public final SeekBar radiusBar;

  @NonNull
  public final TextView radiusDescription;

  private FragmentMapBinding(@NonNull ConstraintLayout rootView, @NonNull RelativeLayout container,
      @NonNull LinearLayout containerSettings, @NonNull FloatingActionButton currentLocation,
      @NonNull TextView instructionSubtitle, @NonNull TextView instructionTitle,
      @NonNull ConstraintLayout main, @NonNull ImageView marker, @NonNull EditText message,
      @NonNull FloatingActionButton newReminder, @NonNull Button next, @NonNull SeekBar radiusBar,
      @NonNull TextView radiusDescription) {
    this.rootView = rootView;
    this.container = container;
    this.containerSettings = containerSettings;
    this.currentLocation = currentLocation;
    this.instructionSubtitle = instructionSubtitle;
    this.instructionTitle = instructionTitle;
    this.main = main;
    this.marker = marker;
    this.message = message;
    this.newReminder = newReminder;
    this.next = next;
    this.radiusBar = radiusBar;
    this.radiusDescription = radiusDescription;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentMapBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentMapBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_map, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentMapBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.container;
      RelativeLayout container = ViewBindings.findChildViewById(rootView, id);
      if (container == null) {
        break missingId;
      }

      id = R.id.container_settings;
      LinearLayout containerSettings = ViewBindings.findChildViewById(rootView, id);
      if (containerSettings == null) {
        break missingId;
      }

      id = R.id.currentLocation;
      FloatingActionButton currentLocation = ViewBindings.findChildViewById(rootView, id);
      if (currentLocation == null) {
        break missingId;
      }

      id = R.id.instructionSubtitle;
      TextView instructionSubtitle = ViewBindings.findChildViewById(rootView, id);
      if (instructionSubtitle == null) {
        break missingId;
      }

      id = R.id.instructionTitle;
      TextView instructionTitle = ViewBindings.findChildViewById(rootView, id);
      if (instructionTitle == null) {
        break missingId;
      }

      ConstraintLayout main = (ConstraintLayout) rootView;

      id = R.id.marker;
      ImageView marker = ViewBindings.findChildViewById(rootView, id);
      if (marker == null) {
        break missingId;
      }

      id = R.id.message;
      EditText message = ViewBindings.findChildViewById(rootView, id);
      if (message == null) {
        break missingId;
      }

      id = R.id.newReminder;
      FloatingActionButton newReminder = ViewBindings.findChildViewById(rootView, id);
      if (newReminder == null) {
        break missingId;
      }

      id = R.id.next;
      Button next = ViewBindings.findChildViewById(rootView, id);
      if (next == null) {
        break missingId;
      }

      id = R.id.radiusBar;
      SeekBar radiusBar = ViewBindings.findChildViewById(rootView, id);
      if (radiusBar == null) {
        break missingId;
      }

      id = R.id.radiusDescription;
      TextView radiusDescription = ViewBindings.findChildViewById(rootView, id);
      if (radiusDescription == null) {
        break missingId;
      }

      return new FragmentMapBinding((ConstraintLayout) rootView, container, containerSettings,
          currentLocation, instructionSubtitle, instructionTitle, main, marker, message,
          newReminder, next, radiusBar, radiusDescription);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
